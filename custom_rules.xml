<?xml version="1.0" encoding="UTF-8"?>
<project name="asqliteplus-library-rules" default="help">
    <!--
    A rule to generate the JAR for inclusion in an Android application.
    Output file will be "bin/asqliteplus-0.1.jar".

    This target was copied from ${sdk.dir}/tools/ant/build.xml's "-compile"
    target which used to compile project's .java files into .class files.

    I simplify that target, omitted "build.is.instrumented", "project.is.library",
    "android.package.excludes" logic, added ignoring "Manifest.class"
    in jar-fileset element during packaging the JAR file.
    -->

    <property name="library.name" value="asqliteplus"/>
    <property name="library.version.name" value="0.1"/>

    <target name="jar" depends="-pre-build, -build-setup, -code-gen, -pre-compile">
        <do-only-if-manifest-hasCode elseText="hasCode = false. Skipping...">
            <!-- merge the project's own classpath and the tested project's classpath -->
            <path id="project.javac.classpath">
                <path refid="project.all.jars.path"/>
                <path refid="tested.project.classpath"/>
                <path path="${java.compiler.classpath}"/>
            </path>
            <javac encoding="${java.encoding}"
                   source="${java.source}" target="${java.target}"
                   debug="true" extdirs="" includeantruntime="false"
                   destdir="${out.classes.absolute.dir}"
                   bootclasspathref="project.target.class.path"
                   verbose="${verbose}"
                   classpathref="project.javac.classpath"
                   fork="${need.javac.fork}">
                <src path="${source.absolute.dir}"/>
                <src path="${gen.absolute.dir}"/>
                <compilerarg line="${java.compilerargs}"/>
            </javac>

            <echo level="info">Creating library output jar file...</echo>
            <property name="out.library.jar.file" location="${out.absolute.dir}/${library.name}-${library.version.name}.jar"/>

            <propertybyreplace name="project.app.package.path" input="${project.app.package}" replace="." with="/"/>

            <jar destfile="${out.library.jar.file}">
                <fileset dir="${out.classes.absolute.dir}"
                         includes="**/*.class"
                         excludes="${project.app.package.path}/R.class ${project.app.package.path}/R$*.class
                         ${project.app.package.path}/BuildConfig.class ${project.app.package.path}/Manifest.class"/>
                <fileset dir="${source.absolute.dir}" excludes="**/*.java"/>
            </jar>

        </do-only-if-manifest-hasCode>
    </target>
</project>
